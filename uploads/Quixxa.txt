Quixxa

Quiz Answering Application

#Overview
The Quixxa Answering App is a web-based application that allows users to upload a reference (such as text, PDF, or other documents), enter a question, and provide a set of possible answer choices. The app will use the ChatGPT API to analyze the reference and determine the correct answer from the given options.

This app can be useful for anyone who wants to quickly extract answers from documents or references, such as students studying for exams, professionals seeking answers from reports, or anyone who needs help in interpreting large amounts of text.

#Features
●	File Upload: Users can upload a reference file (e.g., PDF, text) that contains the information needed to answer questions.
●	Question Submission: Users can submit a question along with a set of multiple-choice answers.
●	Answer Retrieval: The app uses the integrated artificial intelligence API to process the reference and determine the most appropriate answer from the given choices.
●	Interactive Interface: The app provides an easy-to-use interface where users can interact with the system and get immediate results.
●	Quiz/Question Generation: The app can allow users to generate quiz questions from a topic/subject/document.
●	Summary: The app has a module that allows users to generate a downloadable PDF of an AI-summarized version of an uploaded reference document.
●	Subjects: Students can group files/documents under a study subject.
●	Study Plan: Students can create a study plan based on their topic/subject/document with an end goal, where the AI generates random questions daily on a topic/subject/document for students to use to practice, they can set a limit to the number of questions they want every day, they can also set a difficulty level to the questions they want to be generated
●	Progress Bar: A progress bar shows how much they’ve advanced in a topic/subject - V1 (after MVP)

#How It Works
●	User Login: User creates an account and logs in to the application(google login, username and password).
●	Subscription: User buys Quixxa points (the cost of each activity varies).
●	File Upload: Users upload a reference document (e.g., text or PDF). The file is saved on the server and the content is extracted and read by AI.
●	Question Input: Users input a question related to the reference document and provide multiple answer choices (separated by commas).
●	Processing with AI API: The app sends the reference content, question, and answer choices to the ChatGPT API. ChatGPT processes the information and returns the most likely answer.
●	Displaying the Answer: The app displays the correct answer based on the AI’s analysis, providing additional information about the answer where the answer was extracted from in the reference document.
●	Generating the Quiz: The app allows users to upload the reference document, then input how many questions are required to be generated and the difficulty level of the quiz.
●	Displaying the Quiz: The app displays the quiz based on the AI’s response to the prompt provided by the user in the previous step.
●	Preparing the Summary: The app allows the user to upload a reference document (txt, PDF, DOC) and specify how many page summary is expected (the number of pages determine the amount of Quixxa points required).
●	Generating the Summary: The app generates a downloadable link for the summary as generated by the integrated AI API.

#Modules
Assessment: The assessment module is the part of the application where the question and answer happens.
Quiz: The quiz module is the part of the application where users can upload documents and generate practice questions or quizzes based on different difficulty levels.
Summary: This module allows users to upload a reference document and then generate a summarized version of the document.

 

MVP:
1.	Upload document
2.	Add questions with or without options, ask AI for the answer and get an explanation
3.	AI should Generate questions (open-ended questions, multiple options, yes/no) 
a.	In-app (download into document with answers and explanations)
4.	AI should be able to grade the user and give the correct options with explanations
5.	The user should be able to set the number of questions that should be generated
6.	Login with google or username and password
7.	User should be able to group documents into subjects
8.	User should be able to create a summarized version of the document uploaded
9.	
V1:
1.	Get a reference for answers
2.	Set difficulty level for questions being generated
3.	Add Practice Exam Module (add timer, user can’t go back)
